{
    "dataset": "leverco_shortened",
    "run": "e6897975-1969-4708-bfc2-4b950a4b2bfd",
    "source": "",
    "snippets_used": 3,
    "attempts": 7,
    "final_scraper_code": "# imports\nimport bs4\nimport json\nimport requests\nfrom bs4 import BeautifulSoup\n\nLIMIT = 20  # limits the number of job listings to retrieve\n\n\ndef get_jobs(url: str) -> list:\n    # make GET request\n    response = requests.get(url)\n    # parse HTML\n    soup = BeautifulSoup(response.text, \"html.parser\")\n    # find all job postings\n    postings = soup.find_all(\"div\", class_=\"posting\")\n    # create empty list to store job listings\n    job_listings = []\n    # loop through postings and extract information\n    for posting in postings[:LIMIT]:  # only retrieve specified number of job listings\n        # extract title\n        title = posting.find(\"h5\", {\"data-qa\": \"posting-name\"}).text\n        # extract workplace type\n        workplace_type = posting.find(\"span\", class_=\"workplaceTypes\").find_next_sibling().text.strip()\n        # extract commitment\n        commitment = posting.find(\"span\", class_=\"commitment\").find_next_sibling().text.strip()\n        # extract location\n        try:\n            location = posting.find(\"span\", class_=\"location\").find_next_sibling().text.strip()\n        except:\n            location = \"N/A\"\n        # extract apply link\n        apply_link = posting.find(\"div\", {\"data-qa\": \"btn-apply\"}).find(\"a\")['href']\n        # create job listing dictionary\n        job_listing = {\"title\": title, \"tag\": [workplace_type, commitment, location], \"apply_link\": apply_link}\n        # append job listing to job listings list\n        job_listings.append(job_listing)\n    # return list of job listings\n    return job_listings\n\n\ndef scraper(url: str):\n    # call the get_jobs function with the specified url\n    job_listings = get_jobs(url)\n    # print job listings as JSON\n    print(json.dumps(job_listings, indent=4))  # specify indent parameter for structured JSON output\n\n\nif __name__ == '__main__':\n    url = \"https://jobs.lever.co/appboxo\"\n    scraper(url)  # call the scraper function with the specified url",
    "test_count": 8,
    "test_succ_count": 2
}